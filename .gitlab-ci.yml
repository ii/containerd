stages:
  - build
  - release

before_script:
  - echo $GOPATH
  - ln -s /builds /go/src/github.com
  - cd /go/src/github.com/containerd/containerd

compile:
  image: golang:1.8.1
  stage: build
  variables:
    CGO_ENABLED: '0'
    GOOS: linux
  script:
    - apt-get update ; apt-get install -y unzip sudo protobuf-compiler protobuf-c-compiler
    - wget https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -O /tmp/protoc-3.1.0-linux-x86_64.zip
    - unzip -o -d /tmp/protobuf /tmp/protoc-3.1.0-linux-x86_64.zip
    - export PATH=$PATH:/tmp/protobuf/bin/
    - go get -u github.com/vbatts/git-validation
    - sudo wget https://github.com/crosbymichael/runc/releases/download/ctd-1/runc -O /bin/runc; sudo chmod +x /bin/runc
    - wget https://github.com/xemul/criu/archive/v3.0.tar.gz -O /tmp/criu.tar.gz
    - tar -C /tmp/ -zxf /tmp/criu.tar.gz
    - cd /tmp/criu-3.0 && sudo make install-criu || sleep 99999
    - cd /go/src/github.com/containerd/containerd
    - GIT_CHECK_EXCLUDE="./vendor" TRAVIS_COMMIT_RANGE="${TRAVIS_COMMIT_RANGE/.../..}" make dco
    - make -j $(getconf _NPROCESSORS_ONLN) fmt || sleep 99999
    - make -j $(getconf _NPROCESSORS_ONLN) vet || sleep 99999
    - make -j $(getconf _NPROCESSORS_ONLN) build || sleep 99999
    - make -j $(getconf _NPROCESSORS_ONLN) binaries || sleep 99999
    - sleep 99999
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks


release:
  stage: release
  image: golang:1.8.1
  script:
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env
